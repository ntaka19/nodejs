//http://qiita.com/kiyodori/items/da434d169755cbb20447 より
console.log("start");

var fs = require('fs');
fs.readFile("number.txt", "utf-8", function(err,data){
	if (err) throw err;
	console.log("ファイルの読み取りが準備できました。");
	console.log(data);
});

console.log("end");

//まずasync_readfile.jsに記載されたコードが実行される。
//fs.readFileは非同期関数。呼び出される関数は一度終了し、中の処理が完了した段階で呼び出し元に通知する。
//
//リクエストが帰ってくるで数秒以上かかると困る。
//そこである関数が呼び出されたときに戻り値として本来渡したい結果を返すのではなく、一度関数としては終了し（呼び出し元に戻る）。後で本来渡したかった値を返せる状態になったときに、呼び出し元にその値を通知する。
//なにかしたの処理が完了したら渡したfunctionを実行させるという関数をコールバック関数という。
//
//async_readfile.jsに記載されたコードはメインスレッドで実行される。
//ファイルの読み出しが可能になったというイベントの発生をトリガーに、fs.readFileの第三引数に指定された関数(コールバック関数)が実行される
//
//
//「ファイルを読みに行く」という処理をI/O専門のワーカースレッド（バックグラウンド）にまかせている。
//メインスレッドはI/O待ちを行っていない。
//処理コストの高いI/O処理をワーカーに任せている間、メインスレッドは別のことを実行できる。
//
//

